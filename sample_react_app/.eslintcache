[{"C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\index.js":"1","C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\App.js":"2","C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\NotLoggedIn.js":"3","C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\Login.js":"4","C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\SprvsrView.js":"5","C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\Header.js":"6","C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\AuthUserView.js":"7","C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\Notification.js":"8","C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\TechView.js":"9","C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\helpers\\helper.js":"10","C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\Menu.js":"11","C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\Timesheet.js":"12","C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\MaximCalendarForm.js":"13","C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\TimesheetWeekDates.js":"14","C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\helpers\\component-helper.js":"15","C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\TimesheetRows.js":"16"},{"size":2141,"mtime":1611305030171,"results":"17","hashOfConfig":"18"},{"size":1434,"mtime":1611306153462,"results":"19","hashOfConfig":"18"},{"size":314,"mtime":1611304808456,"results":"20","hashOfConfig":"18"},{"size":9050,"mtime":1611312226763,"results":"21","hashOfConfig":"18"},{"size":223,"mtime":1506490877441,"results":"22","hashOfConfig":"18"},{"size":1611,"mtime":1611312242304,"results":"23","hashOfConfig":"18"},{"size":1219,"mtime":1506652008748,"results":"24","hashOfConfig":"18"},{"size":726,"mtime":1505888062672,"results":"25","hashOfConfig":"18"},{"size":9186,"mtime":1611312347463,"results":"26","hashOfConfig":"18"},{"size":1506,"mtime":1611311768922,"results":"27","hashOfConfig":"18"},{"size":544,"mtime":1611312221864,"results":"28","hashOfConfig":"18"},{"size":2277,"mtime":1611308441293,"results":"29","hashOfConfig":"18"},{"size":4247,"mtime":1508122480177,"results":"30","hashOfConfig":"18"},{"size":929,"mtime":1508124616077,"results":"31","hashOfConfig":"18"},{"size":161,"mtime":1538273907614,"results":"32","hashOfConfig":"18"},{"size":6301,"mtime":1611308365297,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"12rkza3",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\index.js",[],["73","74"],"C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\App.js",[],"C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\NotLoggedIn.js",[],"C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\Login.js",[],"C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\SprvsrView.js",["75"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass SprvsrView extends React.Component {\r\n    render () {\r\n        return (\r\n            <h2>sample</h2>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SprvsrView;",["76","77"],"C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\Header.js",["78"],"import React from 'react';\r\n\r\nimport logo from '../img/logo.png'\r\n\r\nimport Menu from './Menu';\r\n\r\nimport '../css/app.css';\r\nimport '../css/header.css';\r\n\r\nclass Header extends React.Component {\r\n  \r\n    implementBurger() {\r\n        document.addEventListener('DOMContentLoaded', function () {\r\n            var $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);\r\n            if ($navbarBurgers.length > 0) {\r\n                $navbarBurgers.forEach(function ($el) {\r\n                    $el.addEventListener('click', function () {\r\n                        var target = $el.dataset.target;\r\n                        var $target = document.getElementById(target);\r\n                        $el.classList.toggle('is-active');\r\n                        $target.classList.toggle('is-active');\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n         \r\n    render() {\r\n        this.implementBurger();\r\n        return (\r\n            <nav className = \"navbar is-primary\">\r\n                <div className = \"navbar-brand\">\r\n                    <a className =\"navbar-item\" href=\"#\">\r\n                      <img className = \"mxm-logo\" src= { logo } alt = \"Home\"/>\r\n                    </a>\r\n                    <div className =\"burger navbar-burger\" data-target=\"navbarMxmenu\">\r\n                      <span></span>\r\n                      <span></span>\r\n                      <span></span>\r\n                    </div>\r\n                </div>\r\n                \r\n                <Menu />\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\AuthUserView.js",[],"C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\Notification.js",["79","80"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Notification extends React.Component {\r\n    render() {\r\n        const isVisible = this.props.isVisible;\r\n        const mode = this.props.mode;\r\n        const notif_type = `notification ${mode} ${(!isVisible) ? `notif-hide` : ``}`;\r\n        const message = this.props.message;\r\n        \r\n        let notification_body = <div className = {notif_type} >\r\n              <button className =\"delete\"></button>\r\n            <p id = \"notif-message\"></p>\r\n            </div>;\r\n        \r\n        return notification_body;\r\n    }\r\n}\r\n\r\nNotification.defaultProps = {\r\n    isVisible: true,\r\n    mode: 'is-primary',\r\n    message: null\r\n}\r\n\r\nexport default Notification;","C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\TechView.js",["81","82","83","84","85","86","87"],"import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport JsonRpc from 'jsonrpc-client';\r\n// import PropType from 'prop-types';\r\n\r\nimport Timesheet from './Timesheet';\r\nimport MaximCalendarForm from './MaximCalendarForm';\r\n\r\nimport { formatJSDate, /* AppConstants */ } from '../helpers/helper'; \r\n\r\nclass TechView extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.getMaximCalendar = this.getMaximCalendar.bind(this);\r\n        this.updateSelectedPeriod = this.updateSelectedPeriod.bind(this);\r\n        this.getAllTaskOptions = this.getAllTaskOptions.bind(this);\r\n        this.getTesterDetails = this.getTesterDetails.bind(this);\r\n        this.getUserTasks = this.getUserTasks.bind(this);\r\n        this.getDietypeLookup = this.getDietypeLookup.bind(this);\r\n        this.handleTimesheetOnchange = this.handleTimesheetOnchange.bind(this);\r\n        \r\n        this.state = {\r\n            dietype_lk: [],\r\n            // selected_period: [],\r\n            selected_period: {\r\n                transyear: '',\r\n                transqtr: '',\r\n                transww: '',\r\n            },\r\n            selected_tab : \"summ\",\r\n            tasks : {}\r\n        }\r\n    }\r\n    \r\n    componentWillMount() {\r\n        this.getMaximCalendar(() => {\r\n            this.getWorkweekDates();\r\n        });\r\n        this.getAllTaskOptions();\r\n        this.getTesterDetails();\r\n        // this.getDietypeLookup();\r\n        // this.getWorkweekDates();\r\n    }\r\n\r\n    getWorkweekDates () {\r\n        const {transyear, transqtr, transww} = this.state.selected_period;\r\n        const param = {transyear, transqtr, transww};\r\n        const jsonrpc_url = this.props.params.JsonRpcServer;\r\n        let client = JsonRpc.create(jsonrpc_url);\r\n        client.call('ovt_getWorkweekDates', param, \r\n            (e,r) => {\r\n                this.setState({\r\n                    work_week_dates: r\r\n                })\r\n            }\r\n        );\r\n    }\r\n\r\n    getDietypeLookup (query = false) {\r\n        const jsonrpc_url = this.props.params.JsonRpcServer;\r\n        let client = JsonRpc.create(jsonrpc_url);\r\n        query = query || '';\r\n        client.call('ovt_getDietypeLookup', {query}, \r\n            (e,r) => {\r\n                if(e == null) {\r\n                    this.setState({\r\n                        dietype_lk : r\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        dietype_lk : []\r\n                    });\r\n                }\r\n            }\r\n        )\r\n    }\r\n    \r\n    getMaximCalendar (callback) {\r\n        const date = formatJSDate(Date.now());\r\n        const jsonrpc_url = this.props.params.JsonRpcServer;\r\n        \r\n        let client = JsonRpc.create(jsonrpc_url);\r\n        client.call('ovt_getMaximCalendar', {calendardate: date},\r\n            (e,r) => {\r\n               this.setState(r);\r\n               this.setState({\r\n                selected_period : {\r\n                    transyear: r.current_date.CALENDARYEAR,\r\n                    transqtr: r.current_date.QUARTER,\r\n                    transww: r.current_date.WEEK_NUMBER\r\n                 }\r\n               })\r\n\r\n               callback();\r\n            });\r\n    }\r\n\r\n    getAllTaskOptions () {\r\n        const jsonrpc_url = this.props.params.JsonRpcServer;\r\n        let client = JsonRpc.create(jsonrpc_url);\r\n        client.call('ovt_getTasks', {},\r\n            (e,r) => {\r\n                this.setState({\r\n                    taskOptions : r\r\n                });\r\n            }\r\n        );\r\n    }\r\n    \r\n    getTesterDetails () {\r\n        const jsonrpc_url = this.props.params.JsonRpcServer;\r\n        let client = JsonRpc.create(jsonrpc_url);\r\n        client.call('ovt_getTesterTypeCell', {},\r\n            (e,r) => {\r\n                this.setState({\r\n                    testerDetails : r\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    updateSelectedPeriod(selected_period) {\r\n        this.setState({\r\n            tasks: [],\r\n            selected_period\r\n        }, () => {\r\n            this.getUserTasks()\r\n        });        \r\n    }\r\n    \r\n    setTpeGoal (e) {\r\n        e.preventDefault();\r\n        const prev_active = document.querySelector('li.is-active');\r\n        prev_active.classList.remove('is-active');\r\n        \r\n        const active_tab = e.target.dataset.tab;\r\n        const elmnt = e.target;\r\n        const parent = elmnt.parentNode;\r\n\r\n        parent.classList.add('is-active');\r\n\r\n        this.setState({\r\n            tasks: [],\r\n            selected_tab : active_tab\r\n        }, () => {\r\n            this.getUserTasks()\r\n        });        \r\n    }\r\n\r\n    getUserTasks () {\r\n        const {transyear, transqtr, transww} = this.state.selected_period ;\r\n        let tasks_params = {\r\n            uid : this.props.params.userDetails.stremployeeno,\r\n            goal : this.state.selected_tab,\r\n            transyear, transqtr, transww\r\n        }\r\n        let jsonrpc_url = this.props.params.JsonRpcServer;\r\n        let client = JsonRpc.create(jsonrpc_url);\r\n        \r\n        client.call('ovt_getTasksPerUser',  tasks_params,\r\n            (e,r) => {\r\n                let __tasks;\r\n                if (e == null) {\r\n                    __tasks = this.state.tasks || {};\r\n                    __tasks = r;\r\n                } else {\r\n                    __tasks = {result: false}\r\n                }\r\n\r\n                this.setState({tasks : __tasks, taskForSave: __tasks});\r\n            }\r\n        );\r\n    }\r\n\r\n    handleTimesheetOnchange (e, idx) {\r\n        console.log(this.state.taskForSave[idx]);\r\n    }\r\n\r\n    render () {\r\n        let techview_body;\r\n        if(this.state.selected_tab !== 'summ') {\r\n            if(\r\n                (typeof this.state.tasks.length === 'undefined' \r\n                || this.state.tasks.length === 0)\r\n                & typeof this.state.tasks.result === 'undefined'\r\n            ) {\r\n                techview_body = <div style = {{textAlign: 'center'}}><div className = \"is-loading is-primary button\"></div></div>;\r\n            } else if (typeof this.state.tasks.result !== \"undefined\" && !this.state.tasks.result ) {\r\n                techview_body = <div style = {{textAlign: 'center'}}>No record found.</div>\r\n            } else {\r\n                techview_body = <Timesheet {...this.state} \r\n                                params = {this.props.params} \r\n                                handleTimesheetOnchange = {this.handleTimesheetOnchange}\r\n                                getDietypeLookup = {this.getDietypeLookup}\r\n                            />;\r\n            }\r\n        } else {\r\n            techview_body = <div>Hello World</div>;\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                <section className=\"hero is-primary\">\r\n                    <div className=\"hero-body\">\r\n                        <div className=\"container\">\r\n                            <div className = \"columns is-vcentered\">\r\n                                <div className = \"column is-10\">\r\n                                    <h1 className=\"title\">\r\n                                    Offline Verification Tool\r\n                                  </h1>\r\n                                  <h2 className=\"subtitle\">\r\n                                    Technician Dashboard\r\n                                  </h2>\r\n                                </div>\r\n                                \r\n                                <div className = \"column is-narrow\">\r\n                                    <MaximCalendarForm {...this.state} updateSelectedPeriod = {this.updateSelectedPeriod} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"hero-foot\">\r\n                        <nav className=\"tabs is-boxed\">\r\n                          <div className=\"container\">\r\n                            <ul>\r\n                              <li className = \"is-active\"><a data-tab = \"summ\" onClick = {(e) => {this.setTpeGoal(e)}}>Summary</a></li>\r\n                              <li><a data-tab = \"oee\" onClick = {(e) => {this.setTpeGoal(e)}}>OEE</a></li>\r\n                              <li><a data-tab = \"hold\" onClick = {(e) => {this.setTpeGoal(e)}}>Holds</a></li>\r\n                              <li><a data-tab = \"ppm\" onClick = {(e) => {this.setTpeGoal(e)}}>PPM</a></li>\r\n                              <li><a data-tab = \"npr\" onClick = {(e) => {this.setTpeGoal(e)}}>NPR</a></li>\r\n                              <li><a data-tab = \"rel\" onClick = {(e) => {this.setTpeGoal(e)}}>REL</a></li>\r\n                              <li><a data-tab = \"va\" onClick = {(e) => {this.setTpeGoal(e)}}>Value Added</a></li>\r\n                            </ul>\r\n                          </div>\r\n                        </nav>\r\n                    </div>\r\n                </section>\r\n                \r\n                <div className = \"container is-fluid\" >\r\n                    <section className=\"section\">\r\n                        { techview_body }\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TechView;","C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\helpers\\helper.js",[],"C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\Menu.js",[],"C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\Timesheet.js",[],"C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\MaximCalendarForm.js",["88","89","90","91","92"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport JsonRpc from 'jsonrpc-client';\r\n\r\nimport { formatJSDate } from '../helpers/helper';\r\nimport { SelectOptionBuilder } from '../helpers/component-helper';\r\n\r\nclass MaximCalendarForm extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.passMaxcalPeriod = this.passMaxcalPeriod.bind(this);\r\n    }\r\n        \r\n    passMaxcalPeriod() {\r\n        let transyear = this.transyear.value,\r\n            transqtr = this.transqtr.value,\r\n            transww = this.transww.value;\r\n        \r\n        this.props.updateSelectedPeriod({transyear, transqtr, transww});\r\n    }\r\n    \r\n    render() {\r\n        let transyr, transww, transqtr\r\n        if (typeof this.props.current_date !== 'undefined') {\r\n            transyr = Object.keys(this.props.transww_per_year).map((yr) => {\r\n                return <SelectOptionBuilder key = {yr.toString()} value = {yr} />\r\n            });\r\n            \r\n            let current_year = this.props.selected_period.transyear || this.props.current_date.CALENDARYEAR;\r\n            let current_qtr =  this.props.selected_period.transqtr || this.props.current_date.QUARTER;\r\n                                \r\n            transqtr = Object.keys(this.props.transww_per_year[current_year]).map((qtr) => {\r\n                return <SelectOptionBuilder key = {qtr.toString()} value = {qtr} />\r\n            });\r\n            transww = this.props.transww_per_year[current_year][current_qtr].map((ww) => {\r\n                return <SelectOptionBuilder key = {ww.toString()} value = {ww} />\r\n            });\r\n        }\r\n                        \r\n        return ( (typeof this.props.current_date !== 'undefined') ?\r\n            <div className = \"columns\">\r\n                <form onChange = { this.passMaxcalPeriod } onLoad = { this.passMaxcalPeriod } >\r\n                    <div className = \"column is-grouped is-grouped-right\">\r\n                        <div className = \"field\">\r\n                            <label className = \"label is-small\">Fiscal Year</label>\r\n                              <div className = \"control\">\r\n                                    <div className =\"select is-small\">\r\n                                      <select id = \"mxm-transyr\" ref = {(input) => {this.transyear = input}} defaultValue = {this.props.current_date.CALENDARYEAR}>\r\n                                      { transyr }\r\n                                      </select>\r\n                                    </div>\r\n                              </div>\r\n                        </div>\r\n\r\n                        <div className = \"field\">\r\n                            <label className = \"label is-small\">Quarter</label>\r\n                              <div className = \"control\">\r\n                                    <div className =\"select is-small\">\r\n                                      <select id = \"mxm-transqtr\" ref = {(input) => {this.transqtr = input}} defaultValue = {this.props.current_date.QUARTER}>\r\n                                        {transqtr}\r\n                                      </select>\r\n                                    </div>\r\n                              </div>\r\n                        </div>\r\n\r\n                        <div className = \"field\">\r\n                            <label className = \"label is-small\">Work week</label>\r\n                              <div className = \"control\">\r\n                                    <div className =\"select is-small\">\r\n                                      <select id = \"mxm-transww\" ref = {(input) => {this.transww = input}} defaultValue = {this.props.current_date.WEEK_NUMBER}>\r\n                                        { transww }\r\n                                      </select>\r\n                                    </div>\r\n                              </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n                \r\n                : <div className = \"columns\">\r\n                        <div className = \"column\">\r\n                            <a className = \"is-primary is-loading is-large button\"></a>\r\n                        </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MaximCalendarForm;","C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\TimesheetWeekDates.js",[],"C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\helpers\\component-helper.js",[],"C:\\Users\\johnroe.canamaque\\Documents\\Apps\\sample_react_app\\src\\components\\TimesheetRows.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":16},{"ruleId":"93","replacedBy":"101"},{"ruleId":"95","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":33,"column":21,"nodeType":"105","endLine":33,"endColumn":58},{"ruleId":"97","severity":1,"message":"98","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":16},{"ruleId":"97","severity":1,"message":"106","line":9,"column":15,"nodeType":"99","messageId":"100","endLine":9,"endColumn":22},{"ruleId":"103","severity":1,"message":"107","line":227,"column":59,"nodeType":"105","endLine":227,"endColumn":120},{"ruleId":"103","severity":1,"message":"107","line":228,"column":35,"nodeType":"105","endLine":228,"endColumn":95},{"ruleId":"103","severity":1,"message":"107","line":229,"column":35,"nodeType":"105","endLine":229,"endColumn":96},{"ruleId":"103","severity":1,"message":"107","line":230,"column":35,"nodeType":"105","endLine":230,"endColumn":95},{"ruleId":"103","severity":1,"message":"107","line":231,"column":35,"nodeType":"105","endLine":231,"endColumn":95},{"ruleId":"103","severity":1,"message":"107","line":232,"column":35,"nodeType":"105","endLine":232,"endColumn":95},{"ruleId":"103","severity":1,"message":"107","line":233,"column":35,"nodeType":"105","endLine":233,"endColumn":94},{"ruleId":"97","severity":1,"message":"98","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":16},{"ruleId":"97","severity":1,"message":"108","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":15},{"ruleId":"97","severity":1,"message":"109","line":5,"column":10,"nodeType":"99","messageId":"100","endLine":5,"endColumn":22},{"ruleId":"110","severity":1,"message":"111","line":82,"column":29,"nodeType":"105","endLine":82,"endColumn":84},{"ruleId":"103","severity":1,"message":"107","line":82,"column":29,"nodeType":"105","endLine":82,"endColumn":84},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar",["112"],["113"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'message' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'JsonRpc' is defined but never used.","'formatJSDate' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation"]